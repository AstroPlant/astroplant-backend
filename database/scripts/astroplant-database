#!/usr/bin/env python3

import os
import click
from pathlib import Path

from alembic.config import Config
from alembic import command

import astroplant_database
from astroplant_database.specification import Base, DatabaseManager
from astroplant_database import fixtures


def _get_url():
    return os.getenv(
        "DATABASE_URL", "postgres+psycopg2://astroplant:astroplant@localhost/astroplant"
    )


def _db_handle():
    return DatabaseManager(_get_url())


@click.group()
def cli():
    pass


@cli.command()
def create_schema():
    """Initialize the database by creating the database schema."""
    db = _db_handle()
    Base.metadata.create_all(db.engine)
    db.Session.commit()

    # then, load the Alembic configuration and generate the
    # version table, "stamping" it with the most recent rev:
    alembic_cfg = Config(Path(astroplant_database.__file__).resolve() / "alembic.ini")
    command.stamp(alembic_cfg, "head")


@cli.command()
@click.option("--simulation-definitions/--no-simulation-definitions", default=True)
def insert_definitions(simulation_definitions):
    """
    Insert AstroPlant's default quantity types and peripheral definitions into the
    database.
    """
    db = _db_handle()
    fixtures.insert_definitions(db, simulation_definitions)


if __name__ == "__main__":
    cli()
